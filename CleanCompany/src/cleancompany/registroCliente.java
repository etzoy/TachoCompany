/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cleancompany;

import Reportes.generarReportes;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import modelo.cliente;
import modelo.modeloTablaCliente;

/**
 *
 * @author etzoy
 */
public class registroCliente extends javax.swing.JFrame {

    cleanCompany principal = null;
    modeloTablaCliente mtc = new modeloTablaCliente();
    nuevoCliente nuevoCliente;

    int clickTabla = 0;
    cliente nuevo = new cliente();

    /**
     * Creates new form registroCliente
     */
    public registroCliente(cleanCompany principalOrigen) {

        this.principal = principalOrigen;
        initComponents();
        this.getContentPane().setBackground(Color.BLACK);
        this.setLocationRelativeTo(null);
        this.setTitle("Registro de Clientes");
//        this.botonModificar.setVisible(false);
//        this.jButton2.setVisible(false);
        //this.jtblListaClientes.setModel(mtc);
        try {
            mtc.visualizarTabla(this.jtblListaClientes, principal);
        } catch (Exception ex) {
            Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent evt) {
                visiblePrincipal();
            }
        });
    }

    public void visiblePrincipal() {
        this.principal.setVisible(true);
//        this.botonModificar.setVisible(false);
        this.getContentPane().setBackground(Color.BLACK);
        vaciarCampos();
    }

    public void vaciarCampos() {
//        jTextField1.setText("");
//        jTextArea1.setText("");
//        jTextField3.setText("");
//        jFormattedTextField1.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblListaClientes = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Cancelar");
        jButton4.setToolTipText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jtblListaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Descripcion", "Telefono", "Direccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblListaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblListaClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtblListaClientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Crear un nuevo cliente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Actualizar Tabla");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 414, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizar() {
        try {
            mtc.visualizarTabla(this.jtblListaClientes, principal);
            //mtc.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error en la actualizacion de la base de datos");
        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.getContentPane().setBackground(Color.BLACK);
        this.setVisible(false);        // TODO add your handling code here:
        this.principal.setVisible(true);
//        this.botonModificar.setVisible(false);
        vaciarCampos();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jtblListaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblListaClientesMouseClicked
        // TODO add your handling code here:
        boolean prueba = true;
        int column = jtblListaClientes.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / jtblListaClientes.getRowHeight();

        if (row < jtblListaClientes.getRowCount() && row >= 0 && column < jtblListaClientes.getColumnCount() && column >= 0) {
            Object value = jtblListaClientes.getValueAt(row, column);

            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getName().equals("m")) {
                    System.out.println("Click Boton Modificar" + row + column);

                    this.nuevo.nombre = jtblListaClientes.getValueAt(row, 0).toString();
                    this.nuevo.descripcion = jtblListaClientes.getValueAt(row, 1).toString();
                    this.nuevo.telefono = jtblListaClientes.getValueAt(row, 2).toString();
                    this.nuevo.direccion = jtblListaClientes.getValueAt(row, 3).toString();

                    clickTabla = this.jtblListaClientes.rowAtPoint(evt.getPoint());
                    String nombre = this.jtblListaClientes.getValueAt(clickTabla, 0).toString();
                    String descripcion = this.jtblListaClientes.getValueAt(clickTabla, 1).toString();
                    String telefono = this.jtblListaClientes.getValueAt(clickTabla, 2).toString();
                    String direccion = this.jtblListaClientes.getValueAt(clickTabla, 3).toString();
                    
                    
//                    this.botonModificar.setVisible(true);
//                    this.jButton5.setVisible(false);
//                    this.jButton2.setVisible(true);
                    this.setVisible(false);
                    nuevoCliente = new nuevoCliente(principal);
                    nuevoCliente.nuevo = nuevo;
                    nuevoCliente.texts(nombre, descripcion,telefono,direccion);
                    nuevoCliente.setVisible(true);
                    nuevoCliente.jButton5.setVisible(false);
                    nuevoCliente.getContentPane().setBackground(Color.gray);
                    
                }
                if (boton.getName().equals("e")) {
                    System.out.println("Click Boton Eliminar" + row + column);
                    cliente nuevo = new cliente();
                    nuevo.nombre = jtblListaClientes.getValueAt(row, 0).toString();
                    nuevo.descripcion = jtblListaClientes.getValueAt(row, 1).toString();
                    nuevo.telefono = jtblListaClientes.getValueAt(row, 2).toString();
                    nuevo.direccion = jtblListaClientes.getValueAt(row, 3).toString();

                    if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará el registro, ¿desea continuar?",
                            "Eliminar Registro", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        try {
                            this.principal.controlCliente.eliminarCliente(nuevo);
                        } catch (Exception ex) {
                            Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        actualizar();
                        try {
                            this.principal.rVentaServicio.llenarCombos();
                        } catch (Exception ex) {
                            Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    prueba = false;
                }

            }
            if (prueba) {
                texts(evt);
            }

        }

        prueba = true;

    }//GEN-LAST:event_jtblListaClientesMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        nuevoCliente = new nuevoCliente(principal);
        nuevoCliente.setVisible(true);
        nuevoCliente.botonModificar.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        actualizar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        generarReportes rep = new generarReportes();
        rep.reporteClientes(principal);
        //this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void texts(java.awt.event.MouseEvent evt) {

        clickTabla = this.jtblListaClientes.rowAtPoint(evt.getPoint());
        String nombre = this.jtblListaClientes.getValueAt(clickTabla, 0).toString();
        String descripcion = this.jtblListaClientes.getValueAt(clickTabla, 1).toString();
        String telefono = this.jtblListaClientes.getValueAt(clickTabla, 2).toString();
        String direccion = this.jtblListaClientes.getValueAt(clickTabla, 3).toString();

//        this.jTextField1.setText(nombre);
//        this.jFormattedTextField1.setText(telefono);
//        this.jTextField3.setText(direccion);
//        this.jTextArea1.setText(descripcion);
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtblListaClientes;
    // End of variables declaration//GEN-END:variables
}
