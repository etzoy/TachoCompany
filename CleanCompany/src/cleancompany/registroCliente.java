/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cleancompany;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import modelo.cliente;
import modelo.modeloTablaCliente;

/**
 *
 * @author etzoy
 */
public class registroCliente extends javax.swing.JFrame {

    cleanCompany principal = null;
    modeloTablaCliente mtc = new modeloTablaCliente();

    int clickTabla = 0;
    cliente nuevo = new cliente();

    /**
     * Creates new form registroCliente
     */
    public registroCliente(cleanCompany principalOrigen) {

        this.principal = principalOrigen;
        initComponents();
        this.getContentPane().setBackground(Color.BLACK);
        this.setLocationRelativeTo(null);
        this.setTitle("Registro de Clientes");
        this.botonModificar.setVisible(false);
        this.jButton2.setVisible(false);
        //this.jtblListaClientes.setModel(mtc);
        try {
            mtc.visualizarTabla(this.jtblListaClientes, principal);
        } catch (Exception ex) {
            Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent evt) {
                visiblePrincipal();
            }
        });
    }

    public void visiblePrincipal() {
        this.principal.setVisible(true);
        this.botonModificar.setVisible(false);
        this.getContentPane().setBackground(Color.BLACK);
        vaciarCampos();
    }

    public void vaciarCampos() {
        jTextField1.setText("");
        jTextArea1.setText("");
        jTextField3.setText("");
        jFormattedTextField1.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblListaClientes = new javax.swing.JTable();
        botonModificar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Cancelar");
        jButton4.setToolTipText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 430, -1, -1));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Crear");
        jButton5.setToolTipText("Crea un nuevo cliente");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 430, 86, -1));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jtblListaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Descripcion", "Telefono", "Direccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblListaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblListaClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtblListaClientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 950, 480));

        botonModificar.setBackground(new java.awt.Color(255, 255, 255));
        botonModificar.setText("Modificar");
        botonModificar.setToolTipText("Modifica el registro seleccionado");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 420, -1, 35));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Limpiar");
        jButton1.setToolTipText("Limpia los campos ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 430, -1, -1));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 430, 86, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 40, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 40, 272, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Descripcion:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 90, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 80, 284, 62));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("telefono");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 180, -1, -1));

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+1(###)###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(jFormattedTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 180, 270, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Direccion:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 250, -1, -1));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 250, 271, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/clientes.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 290, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        cliente nuevo = new cliente();
        nuevo.nombre = jTextField1.getText();
        nuevo.descripcion = jTextArea1.getText();
        nuevo.direccion = jTextField3.getText();
        nuevo.telefono = jFormattedTextField1.getText();

        if (!jTextField1.getText().equals("")) {
            if (!jFormattedTextField1.getText().equals("")) {
                this.principal.controlCliente.insertCliente2(nuevo);
                vaciarCampos();

                actualizar();

                try {
                    this.principal.rVentaServicio.llenarCombos();
                } catch (Exception ex) {
                    Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "El campo 'telefono' no puede quedar vacio.", "Error!", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "El campo 'nombre' no puede quedar vacio.", "Error!", JOptionPane.WARNING_MESSAGE);
        }
//this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    public void actualizar() {
        try {
            mtc.visualizarTabla(this.jtblListaClientes, principal);
            //mtc.fireTableDataChanged();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error en la actualizacion de la base de datos");
        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.getContentPane().setBackground(Color.BLACK);
        this.setVisible(false);        // TODO add your handling code here:
        this.principal.setVisible(true);
        this.botonModificar.setVisible(false);
        vaciarCampos();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jtblListaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblListaClientesMouseClicked
        // TODO add your handling code here:
        boolean prueba = true;
        int column = jtblListaClientes.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / jtblListaClientes.getRowHeight();

        if (row < jtblListaClientes.getRowCount() && row >= 0 && column < jtblListaClientes.getColumnCount() && column >= 0) {
            Object value = jtblListaClientes.getValueAt(row, column);

            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getName().equals("m")) {
                    System.out.println("Click Boton Modificar" + row + column);

                    this.nuevo.nombre = jtblListaClientes.getValueAt(row, 0).toString();
                    this.nuevo.descripcion = jtblListaClientes.getValueAt(row, 1).toString();
                    this.nuevo.telefono = jtblListaClientes.getValueAt(row, 2).toString();
                    this.nuevo.direccion = jtblListaClientes.getValueAt(row, 3).toString();
                    this.getContentPane().setBackground(Color.ORANGE);
                    this.botonModificar.setVisible(true);
                    this.jButton5.setVisible(false);
                    this.jButton2.setVisible(true);
                }
                if (boton.getName().equals("e")) {
                    System.out.println("Click Boton Eliminar" + row + column);
                    cliente nuevo = new cliente();
                    nuevo.nombre = jtblListaClientes.getValueAt(row, 0).toString();
                    nuevo.descripcion = jtblListaClientes.getValueAt(row, 1).toString();
                    nuevo.telefono = jtblListaClientes.getValueAt(row, 2).toString();
                    nuevo.direccion = jtblListaClientes.getValueAt(row, 3).toString();

                    if (JOptionPane.showConfirmDialog(rootPane, "Se eliminará el registro, ¿desea continuar?",
                            "Eliminar Registro", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        try {
                            this.principal.controlCliente.eliminarCliente(nuevo);
                        } catch (Exception ex) {
                            Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        actualizar();
                        try {
                            this.principal.rVentaServicio.llenarCombos();
                        } catch (Exception ex) {
                            Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    prueba = false;
                }

            }
            if (prueba) {
                texts(evt);
            }

        }

        prueba = true;

    }//GEN-LAST:event_jtblListaClientesMouseClicked

    public void texts(java.awt.event.MouseEvent evt) {

        clickTabla = this.jtblListaClientes.rowAtPoint(evt.getPoint());
        String nombre = this.jtblListaClientes.getValueAt(clickTabla, 0).toString();
        String descripcion = this.jtblListaClientes.getValueAt(clickTabla, 1).toString();
        String telefono = this.jtblListaClientes.getValueAt(clickTabla, 2).toString();
        String direccion = this.jtblListaClientes.getValueAt(clickTabla, 3).toString();

        this.jTextField1.setText(nombre);
        this.jFormattedTextField1.setText(telefono);
        this.jTextField3.setText(direccion);
        this.jTextArea1.setText(descripcion);
    }
    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        // TODO add your handling code here:
        System.out.println("Boton Modificar");
        cliente update = new cliente();
        update.nombre = jTextField1.getText();
        update.descripcion = jTextArea1.getText();
        update.direccion = jTextField3.getText();
        update.telefono = jFormattedTextField1.getText();
        if (!jTextField1.getText().equals("")) {
            if (!jFormattedTextField1.getText().equals("")) {
                this.principal.controlCliente.actualizarCliente(nuevo, update);

                actualizar();
                try {
                    this.principal.rVentaServicio.llenarCombos();
                } catch (Exception ex) {
                    Logger.getLogger(registroCliente.class.getName()).log(Level.SEVERE, null, ex);
                }

                this.nuevo = null;
                this.botonModificar.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "El campo 'telefono' no puede quedar vacio.", "Error!", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "El campo 'nombre' no puede quedar vacio.", "Error!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botonModificarActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (evt.getKeyChar() >= 33 && evt.getKeyChar() <= 64
                || evt.getKeyChar() >= 91 && evt.getKeyChar() <= 96
                || evt.getKeyChar() >= 123 && evt.getKeyChar() <= 208
                || evt.getKeyChar() >= 210 && evt.getKeyChar() <= 240
                || evt.getKeyChar() >= 242 && evt.getKeyChar() <= 255) {
            getToolkit().beep();
            evt.consume();
        }
//        if (Character.isDigit(validar)) {
//            getToolkit().beep();
//            evt.consume();
//        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextArea1.setText("");
        jTextField3.setText("");
        jFormattedTextField1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.getContentPane().setBackground(Color.BLACK);
        this.jButton5.setVisible(true);
        this.jButton2.setVisible(false);
        this.botonModificar.setVisible(false);
        vaciarCampos();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable jtblListaClientes;
    // End of variables declaration//GEN-END:variables
}
